name: Deploy

on:
  push:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io

jobs:
  build-web-ui:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/ewancoder/habits-web

    - name: Build and push Production API Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v6
      with:
        push: true
        context: ./frontend
        file: frontend/Dockerfile-production
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
  build-api:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to GitHub Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/ewancoder/habits-api

    - name: Build and push API Docker image
      id: push
      uses: docker/build-push-action@v6
      with:
        push: true
        context: ./backend
        file: backend/Habits.Api/Dockerfile
        target: final
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [build-web-ui, build-api]

    permissions:
      contents: read

    steps:
    - name: Deploy to DO
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        passphrase: ${{ secrets.PASSWORD }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          curl https://raw.githubusercontent.com/ewancoder/habits/main/docker-compose-production.yml > /tmp/habits-docker-compose.yml
          docker compose -f /tmp/habits-docker-compose.yml pull
          docker compose -f /tmp/habits-docker-compose.yml up -d
